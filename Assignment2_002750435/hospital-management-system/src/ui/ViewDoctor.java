/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.DoctorDetails;
import model.House;
import model.PatientDetails;
import model.SystemAdmin;
import validators.NumberValidator;
import validators.StringValidator;

/**
 *
 * @author zainabkhokawala
 */
public class ViewDoctor extends javax.swing.JPanel {

    /**
     * Creates new form ViewDoctor
     */
    public ViewDoctor() {
        initComponents();
        populateTable();
        genderButtonGroup.add(male);
        genderButtonGroup.add(female);
        genderButtonGroup.add(nonBinary);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        genderButtonGroup = new javax.swing.ButtonGroup();
        lblDoctorView = new javax.swing.JLabel();
        txtFullName = new javax.swing.JTextField();
        lblAge = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        txtHospitalName = new javax.swing.JTextField();
        txtSpecialization = new javax.swing.JTextField();
        lblHospitalName = new javax.swing.JLabel();
        lblSSN = new javax.swing.JLabel();
        lblSpecialization = new javax.swing.JLabel();
        nonBinary = new javax.swing.JRadioButton();
        lblDoctorId = new javax.swing.JLabel();
        lblPhoneNumber = new javax.swing.JLabel();
        txtDoctorID = new javax.swing.JTextField();
        female = new javax.swing.JRadioButton();
        lblGender = new javax.swing.JLabel();
        male = new javax.swing.JRadioButton();
        txtPhoneNumber = new javax.swing.JTextField();
        lblUserName = new javax.swing.JLabel();
        txtUserName = new javax.swing.JTextField();
        txtSSN = new javax.swing.JTextField();
        lblFullName = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        lblDoctorList = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblViewDoctors = new javax.swing.JTable();
        lblHouseNumber = new javax.swing.JLabel();
        txtZipCode = new javax.swing.JTextField();
        lblZipCode = new javax.swing.JLabel();
        txtHouseNumber = new javax.swing.JTextField();
        lblStreetAddress = new javax.swing.JLabel();
        txtStreetAddress = new javax.swing.JTextField();

        lblDoctorView.setFont(new java.awt.Font("Arial", 2, 24)); // NOI18N
        lblDoctorView.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDoctorView.setText("View Doctors");
        lblDoctorView.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        txtFullName.setInputVerifier(new StringValidator());

        lblAge.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblAge.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblAge.setText("Age");

        txtAge.setInputVerifier(new NumberValidator());

        txtHospitalName.setInputVerifier(new StringValidator());

        txtSpecialization.setInputVerifier(new StringValidator());

        lblHospitalName.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblHospitalName.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblHospitalName.setText("Hospital Name");

        lblSSN.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblSSN.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblSSN.setText("SSN");

        lblSpecialization.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblSpecialization.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblSpecialization.setText("Specialization");

        nonBinary.setText("Non Binary");

        lblDoctorId.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblDoctorId.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblDoctorId.setText("Doctor ID");

        lblPhoneNumber.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblPhoneNumber.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblPhoneNumber.setText("Phone Number");

        txtDoctorID.setInputVerifier(new NumberValidator());

        female.setText("Female");

        lblGender.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblGender.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblGender.setText("Gender");

        male.setText("Male");

        txtPhoneNumber.setInputVerifier(new NumberValidator());

        lblUserName.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblUserName.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblUserName.setText("User Name");

        txtUserName.setEditable(false);
        txtUserName.setInputVerifier(new StringValidator());

        txtSSN.setInputVerifier(new StringValidator());

        lblFullName.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblFullName.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblFullName.setText("Full Name");

        btnUpdate.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnView.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        lblDoctorList.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblDoctorList.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDoctorList.setText("Doctor List");
        lblDoctorList.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        tblViewDoctors.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 102, 255), 2, true));
        tblViewDoctors.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Doctor ID", "Full Name", "Gender", "Age", "Phone Number", "Street Address", "Hospital Name", "Specialization"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblViewDoctors);

        lblHouseNumber.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblHouseNumber.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblHouseNumber.setText("House Number");

        txtZipCode.setInputVerifier(new NumberValidator());

        lblZipCode.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblZipCode.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblZipCode.setText("Zip Code");

        txtHouseNumber.setInputVerifier(new NumberValidator());

        lblStreetAddress.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblStreetAddress.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblStreetAddress.setText("Street Address");

        txtStreetAddress.setInputVerifier(new StringValidator());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblDoctorView, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(202, 202, 202)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblSpecialization, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtSpecialization, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(lblUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(8, 8, 8)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblGender, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblDoctorId, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblFullName, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblSSN, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblAge, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtSSN, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtFullName, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtAge, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtPhoneNumber, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtDoctorID, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(female)
                                    .addGap(18, 18, 18)
                                    .addComponent(male)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(nonBinary)))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblHospitalName, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtHospitalName, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblStreetAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtStreetAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblZipCode, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtZipCode, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblHouseNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtHouseNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(316, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
            .addComponent(lblDoctorList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblDoctorView, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSSN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSSN, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDoctorID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDoctorId, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFullName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFullName, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAge, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGender, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(female)
                    .addComponent(male)
                    .addComponent(nonBinary))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtHouseNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHouseNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtZipCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblZipCode, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtStreetAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblStreetAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtHospitalName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHospitalName, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSpecialization, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSpecialization, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lblDoctorList, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selected = tblViewDoctors.getSelectedRow();
        
        if (selected < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to delete!");
            return;
        }
        
        DoctorDetails doctor = SystemAdmin.doctorDirectoryRef.getDoctorDirectory().get(selected);
        
        SystemAdmin.doctorDirectoryRef.getDoctorDirectory().remove(doctor);
        SystemAdmin.personDirectoryRef.getPersonDirectory().remove(doctor);
        
        populateTable();
        
        
        txtSSN.setText("");
        txtDoctorID.setText("");
        txtFullName.setText("");
        txtAge.setText("");
        genderButtonGroup.clearSelection();
        txtPhoneNumber.setText("");
        txtHouseNumber.setText("");
        txtStreetAddress.setText("");
        txtZipCode.setText("");
        txtHospitalName.setText("");
        txtSpecialization.setText("");
        txtUserName.setText("");
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
         int selected = tblViewDoctors.getSelectedRow();
        
          if (selected < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view!");
            return;
        }
        
        DoctorDetails doctor = SystemAdmin.doctorDirectoryRef.getDoctorDirectory().get(selected);
        
        txtSSN.setText(String.valueOf(doctor.getPersonSSN()));
        txtDoctorID.setText(String.valueOf(doctor.getDoctorID()));
        txtFullName.setText(String.valueOf(doctor.getPersonFullName()));
        txtAge.setText(String.valueOf(doctor.getPersonAge()));
        String personGender = doctor.getPersonGender();
        if(personGender.equals("Female")){
            female.setSelected(true);
            male.setSelected(false);
            nonBinary.setSelected(false);
        } else if (personGender.equals("Male")){
        male.setSelected(true);
        female.setSelected(false);
            nonBinary.setSelected(false);
    } else {
            nonBinary.setSelected(true);
            male.setSelected(false);
            female.setSelected(false);
        }
        txtPhoneNumber.setText(String.valueOf(doctor.getPersonPhoneNumber()));
        txtHouseNumber.setText(String.valueOf(doctor.getHouse().getHouseNumber()));
        txtStreetAddress.setText(String.valueOf(doctor.getHouse().getStreetAddress()));
        txtHospitalName.setText(String.valueOf(doctor.getHospitalName()));
        txtSpecialization.setText(String.valueOf(doctor.getDoctorSpecialization()));
        txtZipCode.setText(String.valueOf(doctor.getHouse().getHouseZip()));
        txtUserName.setText(String.valueOf(doctor.getUserName()));
        btnUpdate.setEnabled(true);
        btnUpdate.setEnabled(true);
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        int selected = tblViewDoctors.getSelectedRow();
        
        if (selected < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to update!");
            return;
        }
        
        long doctorSSN = Long.parseLong(txtSSN.getText());
        long doctorID = Long.parseLong(txtDoctorID.getText());
        String doctorFullName = txtFullName.getText();
        int doctorAge = Integer.parseInt(txtAge.getText());
        String doctorGender="";
        if(male.isSelected()){
            doctorGender = "Male";
            
        } else if(female.isSelected()){
            doctorGender = "Female";
            
        } else {
            doctorGender = "Non Binary";
            
        }
        long doctorPhone = Long.parseLong(txtPhoneNumber.getText());
        
        int houseNumber = Integer.parseInt(txtHouseNumber.getText());
        
        long houseZip = Long.parseLong(txtZipCode.getText());
        
        String doctorAddress = txtStreetAddress.getText();
        
        House house = new House(doctorAddress, houseNumber, houseZip);
        
        String doctorHospital = txtHospitalName.getText();
        String doctorSpecialization = txtSpecialization.getText();
        String doctorUserName = txtUserName.getText();
        
        DoctorDetails doctor = SystemAdmin.doctorDirectoryRef.getDoctorDirectory().get(selected);
        
        
        doctor.setPersonSSN(doctorSSN);
        doctor.setDoctorID(doctorID);
        doctor.setPersonFullName(doctorFullName);
        doctor.setPersonAge(doctorAge);
        doctor.setPersonGender(doctorGender);   
        doctor.setPersonPhoneNumber(doctorPhone);
        doctor.setHouse(house);
                doctor.setHospitalName(doctorHospital);
        doctor.setDoctorSpecialization(doctorSpecialization);
        doctor.setUserName(doctorUserName);
        
          populateTable();
          
        txtSSN.setText("");
        txtDoctorID.setText("");
        txtFullName.setText("");
        txtAge.setText("");
        genderButtonGroup.clearSelection();
        txtPhoneNumber.setText("");
        txtHouseNumber.setText("");
        txtStreetAddress.setText("");
        txtZipCode.setText("");
        txtHospitalName.setText("");
        txtSpecialization.setText("");
        txtUserName.setText("");
        
    }//GEN-LAST:event_btnUpdateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnView;
    private javax.swing.JRadioButton female;
    private javax.swing.ButtonGroup genderButtonGroup;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblDoctorId;
    private javax.swing.JLabel lblDoctorList;
    private javax.swing.JLabel lblDoctorView;
    private javax.swing.JLabel lblFullName;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblHospitalName;
    private javax.swing.JLabel lblHouseNumber;
    private javax.swing.JLabel lblPhoneNumber;
    private javax.swing.JLabel lblSSN;
    private javax.swing.JLabel lblSpecialization;
    private javax.swing.JLabel lblStreetAddress;
    private javax.swing.JLabel lblUserName;
    private javax.swing.JLabel lblZipCode;
    private javax.swing.JRadioButton male;
    private javax.swing.JRadioButton nonBinary;
    private javax.swing.JTable tblViewDoctors;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtDoctorID;
    private javax.swing.JTextField txtFullName;
    private javax.swing.JTextField txtHospitalName;
    private javax.swing.JTextField txtHouseNumber;
    private javax.swing.JTextField txtPhoneNumber;
    private javax.swing.JTextField txtSSN;
    private javax.swing.JTextField txtSpecialization;
    private javax.swing.JTextField txtStreetAddress;
    private javax.swing.JTextField txtUserName;
    private javax.swing.JTextField txtZipCode;
    // End of variables declaration//GEN-END:variables
    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblViewDoctors.getModel();
        model.setRowCount(0);
                for (DoctorDetails doctorDetails : SystemAdmin.doctorDirectoryRef.getDoctorDirectory()) {

            Object[] rowData = new Object[8];
            rowData[0] = doctorDetails.getDoctorID();
            rowData[1] = doctorDetails.getPersonFullName();
            rowData[2] = doctorDetails.getPersonGender();
            rowData[3] = doctorDetails.getPersonAge();
            rowData[4] = doctorDetails.getPersonPhoneNumber();
            rowData[5] = doctorDetails.getHouse().getStreetAddress();
            rowData[6] = doctorDetails.getHospitalName();
            rowData[7] = doctorDetails.getDoctorSpecialization();
            model.addRow(rowData);

        }
    }
}


